#The following variables are used if the dock is deployed and retracted via a servo motor
#如果探针坞通过舵机伸出和缩回，则使用以下变量定义舵机相关参数
[gcode_macro _User_Variables]
variable_verbose:            True    # 启用信息详细输出（默认开启即可）。
variable_debug:              False   # 开启或关闭debug信息输出。
                                     # 通常情况下,正常使用时我们会将variable_debug设置为False关闭调试信息输出。
                                     # 只有在遇到问题需要诊断时,临时开启variable_debug获取更多的调试信息输出。
variable_enable_dock_servo:  True    # 如果您的 klicky 底座是舵机控制的，则设置为 true。
variable_servo_name:         'G'     # 探针坞控制舵机的名称。
variable_servo_deploy:       125     # 这个值是探针坞伸出到位时舵机的角度值。
variable_servo_retract:      35      # 这个值是探针坞收回到位时舵机的角度值（一般情况下也就是探针坞的初始位置）。
variable_servo_delay:        250     # 这是等待伺服器到达请求位置的延迟，单位ms。不需要太高的值，能保证舵机稳定到位即可。


# 请求获取 _User_Variables 自定义G代码宏的输出，并将输出作为命令响应返回。
gcode:
    RESPOND TYPE=command MSG="{ printer['gcode_macro _User_Variables'] }"


[servo G]
pin: P1.23                   # 舵机连接到打印机主板上的接口定义
initial_angle: 35            # 舵机初始位置，以度为单位（一般情况下也就是探针坞收回到位时舵机的角度值。默认启动时不发送任何信号。）
maximum_servo_angle: 180     # 这个舵机最大可以旋转的最大角度，以度为单位（默认启动时不发送任何信号。）
minimum_pulse_width: 0.0005  # 舵机最小脉冲宽度，单位ms（根据自己的舵机型号设置。调整到舵机不再抖动发出噪音，定位准确为止）
maximum_pulse_width: 0.0025  # 舵机最大脉冲宽度，单位ms（根据自己的舵机型号设置。调整到舵机不再抖动发出噪音，定位准确为止）



# 注意！！！以下内容定义探针动作等，一般不需要更改。
# 如有兴趣深入研究，请参考官方文档：https://github.com/jlas1/Klicky-Probe
 
# 这段代码的作用是:当之前在 _User_Variables 宏中定义的 debug 变量为 True 时,
# 将通过调用 _KlickyDebug 宏传入的 MSG 参数内容作为信息消息输出,否则不执行任何操作。
[gcode_macro _KlickyDebug]
gcode:
    {% set message  = params.MSG %}
    {% set debug = printer["gcode_macro _User_Variables"].debug|default(False) %}
    
    {% if debug %}
        { action_respond_info(message) }
    {% endif %} 


# Klicky Dock Servo Deploy
# 探针坞伸出动作
[gcode_macro DeployKlickyDock]
description: Deploys Klicky servo-controlled dock
gcode:
    {% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}
    {% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}
    {% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}
    {% set servo_deploy = printer["gcode_macro _User_Variables"].servo_deploy|default(360) %}
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}
    
    {% if printer.toolhead.position.z|float < euclid_probe.bed_clearance %}
        G0 Z{ euclid_probe.bed_clearance } F500
    {% endif %}
   
    # wait for all the moves to complete
    M400
    {% if enable_dock_servo != False %}
        _KlickyDebug msg="DeployKlickyDock Klicky servo configuration enabled"
        {% if servo_deploy == 360 %}
            { action_raise_error("Klicky: servo active on klicky-variables, but no servo deploy angle specified") }
        {% endif %}
        _KlickyDebug msg="DeployKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}"
        SET_SERVO SERVO={servo_name|string} ANGLE={servo_deploy|int}
        M400
        G4 P{servo_delay|int}
        #_KlickyDebug msg="DeployKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"
        #SET_SERVO SERVO={servo_name|string} WIDTH=0
    {% elif printer["gcode_macro _DeployDock"] is defined %}
        _KlickyDebug msg="DeployKlickyDock calling _DeployDock"
        _DeployDock
    {% endif %}



# Klicky Dock Servo Retract
# 探针坞收回动作
[gcode_macro RetractKlickyDock]
description: Retracts Klicky servo-controlled dock
gcode:
    {% set enable_dock_servo = printer["gcode_macro _User_Variables"].enable_dock_servo|default(False) %}
    {% set servo_delay = printer["gcode_macro _User_Variables"].servo_delay|default(1000) %}
    {% set servo_name = printer["gcode_macro _User_Variables"].servo_name %}
    {% set servo_retract = printer["gcode_macro _User_Variables"].servo_retract|default(360) %}


    #wait for all the moves to complete
    M400
    {% if enable_dock_servo != False %}
        _KlickyDebug msg="RetractKlickyDock Klicky servo configuration enabled"
        {% if servo_retract == 360 %}
            { action_raise_error("Klicky: servo active on klicky-variables, but no servo retract angle specified") }
        {% endif %}
        _KlickyDebug msg="RetractKlickyDock SET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}"
        SET_SERVO SERVO={servo_name|string} ANGLE={servo_retract|int}
        M400
        G4 P{servo_delay|int}
        _KlickyDebug msg="RetractKlickyDock SET_SERVO SERVO={servo_name|string} WIDTH=0"
        SET_SERVO SERVO={servo_name|string} WIDTH=0
    {% elif printer["gcode_macro _RetractDock"] is defined %}
        _KlickyDebug msg="RetractKlickyDock calling _RetractDock"
        _RetractDock
    {% endif %}