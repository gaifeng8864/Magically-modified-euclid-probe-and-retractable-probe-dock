## The following is EXAMPLE configuration; it is intended to guide you in the
## configuration of the Euclid probe for YOUR printer.
##
## When incorporating this config into your own, make sure you address all
## comment markers starting with "@TODO".  Failure to do so could result in
## damage to your probe, your printer, or your pride.
##
## This example is for a fixed dock, fixed gantry/carriage and moving bed motion
## system like RailCore, Ender5, V-Core3, etc. Delta printes will be similar.
##
## Moving gantry printers like Voron need a few tweaks to ensure proper
## clearances and leveling procedures; some hints are provided inline below.
##
## Array variables implementation and macro setups credited to Brian Lalor,
## yolo-dubstep#8033 on Discord. See https://github.com/blalor/vcore3-ratos-config
## for updates and details.
##
##
## 以下是示例配置； 它旨在指导您
## 为您的打印机配置 Euclid 探针。
##
## 当将此配置合并到您自己的配置中时，请确保解决配置好
## 以“@TODO”开头的注释标记的参数。 如果不这样做可能会导致
## 损坏您的探头、打印机或您的自尊。
##
##
## 此示例适用于固定探针坞、固定龙门架/托架和移动床运动
## 系统如 RailCore、Ender5、V-Core3 等。Delta 打印将类似。
##
## 像 Voron 这样的移动龙门打印机需要进行一些调整以确保正确
## 间隙和调平程序； 下面内容提供了一些提示。
##
## 数组变量实现和宏设置归功于 Brian Lalor，
## Discord 上的 yolo-dubstep#8033。 请参阅 https://github.com/blalor/vcore3-ratos-config
## 了解更新和详细信息。



## 以下这段代码用于设置 Klipper 固件中 M118 和 RESPOND 命令的默认输出前缀。
##
## default_type: echo: 这行代码将默认输出前缀类型设置为 echo。
## 这意味着，如果未明确设置输出前缀，则 M118 和 RESPOND 命令的输出信息前缀将默认为 **echo: **。
##
## default_prefix: echo: #: 这行代码显式地将默认输出前缀设置为 **echo: **。
## 即使 default_type 设置了其他类型，也会被 default_prefix 覆盖。
##
## 总结：
## 这段代码将 M118 和 RESPOND 命令的默认输出前缀都设置为 **echo: **。
## 这意味着，所有来自这两个命令的输出信息都将以 **echo: ** 开头。
##
[respond]
default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".
##



## 以下是一些可自定义的重要配置，根据自己的打印机的参数进行调整！！！
## 如果光看注释还是不清楚，请参考官网的说明：https://www.klipper3d.org/zh/
##
[bed_mesh]               ## 床网补偿

speed: 100               ## 默认值：60mm/s。探针在两个探测点之间移动的速度

horizontal_move_z: 12    ## 默认值：5。在开始床网探测之前打印头需要抬升的高度。单位mm。
                         ## 注意，这个值要大于你的打印机探针的顶点与喷嘴顶点在Z轴上的偏移值。
						 ## 就是说，假如你的探针顶点与喷嘴在Z轴方向上的距离为11mm，那么此项的值至少得12mm。
						 ## 这样才会有足够的距离避免探针在两个探测点之间移动时剐蹭到热床。

mesh_min: 20,20          ## （必须配置）第一个探测的坐标，距离原点最近。
                         ## 注意，这个值需要根据探针顶部中心与喷嘴中心在XY轴方向的间距来确定。
						 ## 探针无论怎么安装，始终都会与喷嘴中心在XY轴方向有一定距离，所以探针实际上是无法探测到所有的热床可打印范围的。
						 ## 例如，探针顶部中心与喷嘴中心在XY轴方向的间距分别为5mm和18mm，
						 ## 考虑到让床网探测范围与热床四边距离相等更合适，最后XY方向都取个最大距离整值20mm。
						 ## 那么，探针开始的位置就是X=20，Y=20。
												 
mesh_max: 250,250        ## （必须配置）距离原点最远的探测坐标。 这不一定是最后一个探测点，因为探测会以锯齿形的方式运动。

probe_count: 10,10       ## 默认值：3, 3 每个轴上要探测的点数，指定为 X, Y 整数值。这个值最好能被XY轴的最大探测距离整除。 
                         ## 请注意，如果您想要一个方形网格，例如 3x3，可以将指定其为一个整数值，比如 probe_count: 3。 
												 ## 请注意，每个轴上至少要有3个网格探测点。
												 
algorithm: bicubic       ## 使用的差值算法。（详情参考klipper官方文档https://www.klipper3d.org/zh/Bed_Mesh.html）

fade_start: 1            ## 默认值：1 ，开始网格淡出的值，在设定的fade_start值之后逐步停止调整Z的高度。 
                         ## 建议在打印几层之后再开始淡出层高。此处设置为0.4，意味着在第3层就开始网格淡出。
												 
fade_end: 10             ## 默认值：0 ，网格淡出完成的 Z 高度。 如果此值低于fade_start，则禁用网格淡出。
                         ## 如果对 fade_start 使用默认值 1，则 10mm 是一个合理的值。
												 
#fade_target: 0          ## 默认值：热床网格的平均Z值。 fade_target 是在网格淡出完成后应用于整个床的额外 Z 偏移。
                         ## 一 般来说，这个值是 0，但有些情况下它需要改动。 例如，您在热床的归位位置与床的平均探测高度有偏差，它比床的平均探测高度低 0.2 mm。 
                         ## 如果 fade_target 为 0，淡出会将整个床的打印平均缩小 0.2 mm。 通过将 fade_target 设置为 0.2，归位的位置将扩大 0.2 毫米，但床的其余部分将具有准确的尺寸。
                         ## 注意！！！一般来说，最好将 fade_target 排除在配置之外，以便使用网格的平均高度，但是如果想要在床的特定部分上打印，则可能需要手动调整淡入淡出目标。




## 下面这个宏命令用于恢复在klipper启动时加载配置文件的旧行为（目前新版本klipper默认已弃用此设置）
## 注意！！！这个选项是配置klipper系统本身在启动时的动作。
##
## 如果不想每次打印都自动进行一遍床网探测，那么就需要在空闲时进行一遍床网探测后保存结果。
## 然后在切片软件的起始GCODE里调用一下这个保存的床网探测结果即可。以后只需要定期探测一次就可以了。
##
#[delayed_gcode bed_mesh_init]   
#initial_duration: .01
#gcode:
#  BED_MESH_PROFILE LOAD=default
##


## Below is an example bed diagram to correlate with macros and movements below.
##
## 这是与下面的宏和运动相关的示例床图。
#  __________________________________________________________________________
#  |                                                                        |
#  |                    Dock Exit Position *                     Dock *     |
#  |                    X170,266.5                               X267,266.5 |## 探针坞所在点。打印头移动到到此处取/放探针。
#  |                    ## 探针坞出入口点。                                 | 
#  |                    ## 存放探针时，                                     |
#  |                    ## 探针先到此点而后划入“Dock”。     Dock Side *     |## 探针坞码头点 
#  |                    ## 取出探针时，                     X267,Y240       |## 存放探针时，探针从“Dock Exit Position”划入“Dock”到位后，打印头移动到此点使探针与打印头脱离。
#  |                    ## 探针从“Dock”先到此点而后离开。                   |## 取出探针时，打印头从“Dock Preflight”移动到此处后开始减速移动到“Dock”上方并吸附探针。
#  |                                                                        |
#  |                                                                        |
#  |                                                   Dock Preflight *     |## 探针坞预检点。
#  |                                                   X267,Y170            |## 存放探针时，打印头从“Dock Side”移动到此处正式脱离探针坞，完成探针存放动作。
#  |                                                                        |## 取出探针时，打印头从任意位置都会先快速移动到此处后再开始向“Dock Side”移动。
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |                                                                        |
#  |________________________________________________________________________|
##



## EuclidProbe探针参数变量宏
##
[gcode_macro EuclidProbe]
description: config vars for Euclid probe deploy/stow

## @TODO Replace the coordinates to suit your printer
##
## 替换以下配置项的坐标，以适合你自己的打印机。
## 原则就是，给伸缩探针坞的摇臂留出足够的空间完成伸缩动作。探针坞的具体位置需要结合探针取放进行测试校准。
## 各坐标点相对于热床或打印头移动平面的分布，参考上图标注。
##
variable_position_preflight: [   267, 170     ] # position for probe to have clear path to dock（参考上面的热床示意图）
variable_position_side:      [   267, 240     ] # position for probe near dock to swipe on/off（参考上面的热床示意图）
variable_position_dock:      [   267, 266.5   ] # dock position（参考上面的热床示意图）
variable_position_exit:      [   170, 266.5   ] # exit position （参考上面的热床示意图）


 
## @TODO if your printer has a fixed Z-Endstop that you will use define it here
## @TODO for example Voron Trident
##
## @TODO 如果您的打印机有一个固定的 Z-Endstop，您将在此处定义它
## @TODO 例如沃隆三叉戟
##
# variable_position_zstop:      [ 150,250 ] # zstop position Z轴归零点的坐标。（本配置中不使用）



## @TODO clearance between the toolhead and bed when traveling to pick up the probe
##
## 行进拾取探头时打印头和床身之间的间隙。这个间隙需要根据探针坞伸出后的最低点距离喷嘴在Z轴上的距离来确定。
## 原则就是在Z轴方向上让热床回退一定距离给探针坞的伸出动作留出足够空间，防止被热床阻挡。此处为25mm。
##
variable_bed_clearance: 25

## probe dock height
## @TODO If the toolhead can move vertically in relation to the probe dock
## @TODO height(such as attached to the be on a moving-gantry printer like a
## @TODO Voron 2.4), set this to the Z position of the probe dock.
##
## 探针底座高度
## @TODO 如果工具头可以相对于探针台垂直移动
## @TODO 高度（例如连接到移动龙门打印机上，例如
## @TODO Voron 2.4)，将其设置为探针底座的 Z 位置。（本配置文件中不使用）
##
# variable_dock_height: 15



## move speeds in mm/min
##
## 与探针有关的，打印头在非探测动作时的其他动作的移动速度。
## 比如，
## 从远处任意位置向 Dock Exit Position 靠近时的速度。
## 从远处任意位置向 Dock Preflight 靠近时的速度。
##
variable_move_speeds: 9000


## internal state variables; not for configuration!
## 内部状态变量； 不要自行更改配置！
##
variable_batch_mode_enabled: False
variable_probe_state: None

gcode:
    RESPOND TYPE=command MSG="{ printer['gcode_macro EuclidProbe'] }"
    


## 注意！！！ 以下配置一般不要更改，除非你知道自己在干什么，切记！！！
##
## 下面这个宏命令确保探针处于已知状态
## 需要根据探针种类和接线方式配合 [probe] 里的 pin: !P1.26 确定探针的初始状态（加！取反接口状态或不加！保持标准状态）。
##
## 在我使用的丐版Euclid方案中，探针头上的两个磁铁触点直接连接到微动开关的常闭触点，那么探针头默认状态就是常闭。
##
## 而探针座上的两触点分别直接连接到打印机主板上的探针接口的电源端和信号端，两触点间无连接，那么探针座默认状态就是常开。
## 但是，因为 pin: !P1.26 里加了！取反接口状态，所以此时在klipper系统内检测到的探针接口是 “TRIGGERED” 触发状态。
##
## 当探针被吸附到探针座上后，探针座上的两触点被探针闭合，探针座状态由常开变为常闭。
## 但是，因为 pin: !P1.26 里加了！取反接口状态，所以此时在klipper系统内检测到的探针接口是 “open” 未触发状态。
##
## 这个状态的变化在klipper系统里就会检测为成功吸附到探针。
##
## 存放探针时的状态变化与以上相反。
##
## 当探针开始探测时，微动开关触点触碰到热床被触发，从常闭状态变为常开状态。
## 但是，因为 pin: !P1.26 里加了！取反接口状态，所以此时在klipper系统内检测到的探针接口是 “TRIGGERED” 触发状态。
## 这个状态变化被klipper检测到，在系统内就是一次成功的探测。
##
[gcode_macro _ASSERT_PROBE_STATE]
description: ensures probe is in a known state; QUERY_PROBE must have been called before this macro!
gcode:
    ## QUERY_PROBE manually-verified results, when microswitch not depressed
    ## "TRIGGERED" -> 1 :: probe stowed
    ## "open"      -> 0 :: probe deployed
    {% set last_query_state = "stowed" if printer.probe.last_query == 1 else "deployed" %}

    {% if params.MUST_BE != last_query_state %}
        { action_raise_error("expected probe state to be {} but is {} ({})".format(params.MUST_BE, last_query_state, printer.probe.last_query)) }
    {% else %}
        ## all good; update state
        SET_GCODE_VARIABLE MACRO=EuclidProbe VARIABLE=probe_state VALUE="'{ last_query_state }'"
    {% endif %}


## 下面这个宏命令确保探针已经被吸附到打印头上，否则报错
##
[gcode_macro ASSERT_PROBE_DEPLOYED]
description: error if probe not deployed
gcode:
    # wait for moves to finish, then pause 0.25s for detection
    M400
    G4 P250

    QUERY_PROBE
    _ASSERT_PROBE_STATE MUST_BE=deployed


## 下面这个宏命令确保探针已经被从打印头上取下，否则报错
##
[gcode_macro ASSERT_PROBE_STOWED]
description: error if probe not stowed
gcode:
    # wait for moves to finish, then pause 0.25s for detection
    M400
    G4 P250

    QUERY_PROBE
    _ASSERT_PROBE_STATE MUST_BE=stowed


## 下面这个宏命令开始 euclid 探测批处理模式
##
[gcode_macro EUCLID_PROBE_BEGIN_BATCH]
description: begin euclid probe batch mode
gcode:
    SET_GCODE_VARIABLE MACRO=EuclidProbe VARIABLE=batch_mode_enabled VALUE=True
    RESPOND TYPE=command MSG="Probe batch mode enabled"


## 下面这个宏命令结束 euclid 探针批处理模式并存放探针
##
[gcode_macro EUCLID_PROBE_END_BATCH]
description: end euclid probe batch mode and stow probe
gcode:
    SET_GCODE_VARIABLE MACRO=EuclidProbe VARIABLE=batch_mode_enabled VALUE=False
    RESPOND TYPE=command MSG="Probe batch mode disabled"
    STOW_PROBE


## 下面这个宏命令是打印头拾取探针的动作
##
[gcode_macro DEPLOY_PROBE]
description: deploy Euclid probe
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    {% if euclid_probe.batch_mode_enabled and euclid_probe.probe_state == "deployed" %}
        RESPOND TYPE=command MSG="Probe batch mode enabled: already deployed"
    {% else %}
        RESPOND TYPE=command MSG="Deploying probe"

        # ensure the probe is currently stowed; can't deploy what isn't stowed.
        ASSERT_PROBE_STOWED

        G90

        # set approach elevation to clear probe over bed on fixed gantry machine
        {% if printer.toolhead.position.z|float < euclid_probe.bed_clearance %}
            G0 Z{ euclid_probe.bed_clearance } F500
        {% endif %}
        

        # move the toolhead to safe position to start probe pickup
        G0 X{ euclid_probe.position_preflight[0] } Y{ euclid_probe.position_preflight[1] } F{ euclid_probe.move_speeds }


        DeployKlickyDock

        M400

        #  move to the side of the dock
        G0 X{ euclid_probe.position_side[0] } Y{ euclid_probe.position_side[1] } F{ euclid_probe.move_speeds/4 }

        # @TODO fixed bed dock and moving gantry printers need to add a move
        # @TODO command here to lower the gantry to dock height
        # G0 Z {euclid_probe.dock_height} F500

        # wait 1/4 second
        M400
        G4 P250

        #  move sideways over the dock to pick up probe
        G0 X{ euclid_probe.position_dock[0] } Y{ euclid_probe.position_dock[1] } F{ euclid_probe.move_speeds/6 }

        # confirm deploy was successful
        ASSERT_PROBE_DEPLOYED

        # move out of the dock in a straight line
        G0 X{ euclid_probe.position_exit[0] } Y{ euclid_probe.position_exit[1] } F{ euclid_probe.move_speeds/6 }

        RetractKlickyDock

        M400
    {% endif %}


## 下面这个宏命令是打印头存放探针的动作
##
[gcode_macro STOW_PROBE]
description: stow Euclid probe
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    {% if euclid_probe.batch_mode_enabled %}
        RESPOND TYPE=command MSG="Probe batch mode enabled: not stowing"
    {% else %}
        RESPOND TYPE=command MSG="Stowing probe"

        # ensure the probe is currently deployed; can't stow what isn't deployed.
        ASSERT_PROBE_DEPLOYED

        G90
      
        # set approach elevation for fixed gantry system to clear probe over bed
        {% if printer.toolhead.position.z|float < euclid_probe.bed_clearance %}
            G0 Z{ euclid_probe.bed_clearance } F500
        {% endif %}

        # @TODO fixed bed dock and moving gantry printers need to add a move
        # @TODO command here to lower the gantry to dock height
        # G0 Z{euclid_probe.dock_height} F500

        # move to the exit/re-entry staging position
        G0 X{ euclid_probe.position_exit[0] } Y{ euclid_probe.position_exit[1] } F{ euclid_probe.move_speeds }


        DeployKlickyDock

        M400

        # slowly move into dock
        G0 X{ euclid_probe.position_dock[0] } Y{ euclid_probe.position_dock[1] } F{ euclid_probe.move_speeds/6 }

        # wait for moves to finish, pause to force 90deg travel swipe
        M400
        G4 P250

        # quick swipe off
        G0 X{ euclid_probe.position_side[0] } Y{ euclid_probe.position_side[1] } F{ euclid_probe.move_speeds/4 }

        # confirm stowing was successful
        ASSERT_PROBE_STOWED

        RetractKlickyDock

        M400
    {% endif %}



## Simple example macro to perform a bed mesh calibration by wrapping it in
## DEPLOY_PROBE/STOW_PROBE macros.
## For a more complex example that probes the area that will be printed, see
## https://github.com/blalor/vcore3-ratos-config/blob/50e757ec32e085bedb3b9fa317581f9aa1913dd2/euclid.cfg#L230-L305
##
## 执行床网格校准的简单示例宏
## 拾取探针/存放探针宏命令。
## 有关探测将要打印的区域的更复杂的示例，请参阅
## https://github.com/blalor/vcore3-ratos-config/blob/50e757ec32e085bedb3b9fa317581f9aa1913dd2/euclid.cfg#L230-L305
##
[gcode_macro BED_MESH_CALIBRATE]
description: bed mesh auto calibrate
rename_existing: BED_MESH_CALIBRATE_ORIG
gcode:
    DEPLOY_PROBE
    BED_MESH_CALIBRATE_ORIG
    STOW_PROBE


## @TODO uncomment one of the following macros if necessary for your printer:
## * Z_TILT_ADJUST is for [z_tilt] config
## * QUAD_GANTRY_LEVEL is for [quad_gantry_level] config
##
## @TODO 如果您的打印机需要，请取消注释以下宏之一：
## * Z_TILT_ADJUST 用于 [z_tilt] 配置（Z_TILT_ADJUST用于热床或龙门架倾斜调整）
## * QUAD_GANTRY_LEVEL 用于 [quad_gantry_level] 配置 （QUAD_GANTRY_LEVEL用于四边形龙门架倾斜调整）
##   
# [gcode_macro Z_TILT_ADJUST]
# description: modified Z_TILT_ADJUST, wrapped with DEPLOY_PROBE/STOW_PROBE
# rename_existing: Z_TILT_ADJUST_ORIG
# gcode:
#     DEPLOY_PROBE
#     Z_TILT_ADJUST_ORIG
#     STOW_PROBE


## @TODO ensure sufficient distance specified for horizontal_move_z in [quad_gantry_level]
##
## @TODO确保在[quad_gantry_level]中为horizontal_move_z指定足够的距离
##
# [gcode_macro QUAD_GANTRY_LEVEL]
# description: modified QUAD_GANTRY_LEVEL, wrapped with DEPLOY_PROBE/STOW_PROBE
# rename_existing: QUAD_GANTRY_LEVEL_ORIGINIAL
# gcode:
#     DEPLOY_PROBE
#     QUAD_GANTRY_LEVEL_ORIGINIAL
#     STOW_PROBE


## 以下宏命令用于探针顶点与喷嘴顶点在Z轴方向的偏移量校准
##
[gcode_macro PROBE_CALIBRATE]
description: probe z_offset calibrate
rename_existing: PROBE_CALIBRATE_ORIG
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}
    DEPLOY_PROBE

    G90
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F{ euclid_probe.move_speeds }

    M117 Beginning probe calibration; remove probe before measuring nozzle height!

    PROBE_CALIBRATE_ORIG


## call from slicer printer start gcode; for example, with PrusaSlicer:
## START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature] FILAMENT_TYPE=[filament_type]
##
## 从切片软件调用 start gcode; 例如，使用 PrusaSlicer：
## START_PRINT EXTRUDER_TEMP=[first_layer_temperature] BED_TEMP=[first_layer_bed_temperature] FILAMENT_TYPE=[filament_type]
## 以下宏命令未注释的部分是清除暂停状态并进行一轮床网校准
##
[gcode_macro START_PRINT]
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    ## reset various states to configured or safe defaults
    CLEAR_PAUSE

    EUCLID_PROBE_BEGIN_BATCH

    # G0 Z{ euclid_probe.bed_clearance } F500


    # @TODO enable bed tilt adjustment if necessary for your printer.
    # * Z_TILT_ADJUST is for [z_tilt] config
    # * QUAD_GANTRY_LEVEL is for [quad_gantry_level] config

    # M117 Adjusting for tilt...
    # Z_TILT_ADJUST

    # M117 Performing gantry leveling...
    # QUAD_GANTRY_LEVEL

    # Home again as Z will have changed after adjustment and bed heating.
    # M117 Rehoming after leveling...
    # G28 Z

    BED_MESH_CALIBRATE

    EUCLID_PROBE_END_BATCH

